version: '3.4'

services:
  eventstore:
    image: eventstore/eventstore:release-4.0.2
    ports:
      - "2113:2113"
      - "1113:1113"
    environment:
      - RUN_PROJECTIONS = All
    networks:
      - osdr-test

  redis:
    image: redis:4-alpine
    command: redis-server --appendonly yes
    # ports:
    #   - "6379:6379"
    networks:
      - osdr-test

  rabbitmq:
    image: leanda/rabbitmq
    hostname: "rabbitmq-test"
    environment:
      - RABBITMQ_DEFAULT_VHOST=osdr_test
    ports:
      - "8282:15672"
      - "5672:5672"
    networks:
      - osdr-test

  mongo:
    image: mongo:3.6
    ports:
      - "27017:27017"
    networks:
      - osdr-test

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DATABASE: keycloak
      POSTGRES_ROOT_PASSWORD: keycloak
      pgdata: data-pstgresql
    networks:
      - osdr-test

  keycloak:
    build: KeyCloak
    environment:
      DB_VENDOR: POSTGRES
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_PORT_5432_TCP_ADDR: postgres
      POSTGRES_DATABASE: keycloak
      JDBC_PARAMS: 'connectTimeout=30'
    ports:
      - '8080:8080'
    networks:
      - osdr-test
    depends_on:
      - postgres

  metadata-processing:
    container_name: metadata-processing
    image: leanda/metadata-processing:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./Sds.MetadataStorage.Processing
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - mongo

  osdr-indexing:
    container_name: indexing
    image: leanda/indexing:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_ES=http://elasticsearch:9200
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./Sds.Indexing
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    depends_on:
      - rabbitmq

  imaging:
    container_name: imaging
    image: leanda/imaging:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_TEMP_FILES_FOLDER=/temp
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - QUEUE_PREFETCH_SIZE=9
      - EXECUTOR_THREAD_COUNT=3
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh mongo:27017 -t 30 -- java -Djava.awt.headless=true -Xmx256m -XX:NativeMemoryTracking=summary -jar sds-imaging-service.jar
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
      - ${OSDR_TEMP_FILES_FOLDER}:/temp
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - mongo

  # reaction-parser-service:
  #   container_name: reaction-file-parser
  #   image: docker.your-company.com/sds/reaction-file-parser:${TAG_VERSION-latest}
  #   entrypoint: /bin/bash
  #   environment:
  #     - TZ=EST
  #     - OSDR_LOG_FOLDER=/logs
  #     - OSDR_TEMP_FILES_FOLDER=/temp
  #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
  #     - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
  #     - QUEUE_PREFETCH_SIZE=9
  #     - EXECUTOR_THREAD_COUNT=3
  #   command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh mongo:27017 -t 30 -- java -XX:NativeMemoryTracking=summary -jar reaction-parser.jar
  #   volumes:
  #     - ${OSDR_LOG_FOLDER}:/logs
  #     - ${OSDR_TEMP_FILES_FOLDER}:/temp
  #   networks:
  #     - osdr-test
  #   depends_on:
  #     - rabbitmq
  #     - mongo

  # crystal-parser-service:
  #   container_name: crystal-file-parser
  #   image: docker.your-company.com/sds/crystal-file-parser:${TAG_VERSION-latest}
  #   entrypoint: /bin/bash
  #   environment:
  #     - TZ=EST
  #     - OSDR_LOG_FOLDER=/logs
  #     - OSDR_TEMP_FILES_FOLDER=/temp
  #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
  #     - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
  #     - QUEUE_PREFETCH_SIZE=9
  #     - EXECUTOR_THREAD_COUNT=3
  #   command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh mongo:27017 -t 30 -- java -XX:NativeMemoryTracking=summary -jar crystal-parser.jar
  #   volumes:
  #     - ${OSDR_LOG_FOLDER}:/logs
  #     - ${OSDR_TEMP_FILES_FOLDER}:/temp
  #   networks:
  #     - osdr-test
  #   depends_on:
  #     - rabbitmq
  #     - mongo

  # spectra-parser-service:
  #   container_name: spectra-file-parser
  #   image: docker.your-company.com/sds/spectra-file-parser:${TAG_VERSION-latest}
  #   entrypoint: /bin/bash
  #   environment:
  #     - TZ=EST
  #     - OSDR_LOG_FOLDER=/logs
  #     - OSDR_TEMP_FILES_FOLDER=/temp
  #     - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
  #     - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
  #     - QUEUE_PREFETCH_SIZE=9
  #     - EXECUTOR_THREAD_COUNT=3
  #   command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh mongo:27017 -t 30 -- java -XX:NativeMemoryTracking=summary -jar spectra-parser.jar
  #   volumes:
  #     - ${OSDR_LOG_FOLDER}:/logs
  #     - ${OSDR_TEMP_FILES_FOLDER}:/temp
  #   networks:
  #     - osdr-test
  #   depends_on:
  #     - rabbitmq
  #     - mongo

  chemical-file-parser:
    container_name: chemical-file-parser
    image: leanda/chemical-file-parser:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - TZ=EST
      - OSDR_LOG_FOLDER=/logs
      - OSDR_TEMP_FILES_FOLDER=/temp
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - QUEUE_PREFETCH_SIZE=9
      - EXECUTOR_THREAD_COUNT=3
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh mongo:27017 -t 30 -- java -jar chemical-parser.jar
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
      - ${OSDR_TEMP_FILES_FOLDER}:/temp
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - mongo

  chemical-properties:
    container_name: chemical-properties
    image: leanda/chemical-properties:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - TZ=EST
      - OSDR_LOG_FOLDER=/logs
      - OSDR_TEMP_FILES_FOLDER=/temp
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - QUEUE_PREFETCH_SIZE=9
      - EXECUTOR_THREAD_COUNT=3
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh mongo:27017 -t 30 -- java -jar sds-chemical-properties-service.jar
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
      - ${OSDR_TEMP_FILES_FOLDER}:/temp
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - mongo

  core-backend:
    container_name: core-backend
    image: leanda/core-backend:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_EVENT_STORE=ConnectTo=tcp://admin:changeit@eventstore:1113
      - OSDR_REDIS=redis
      - OSDR_LOG_LEVEL=Error
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./Sds.Osdr.Domain.BackEnd
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - eventstore
      - redis
      - mongo

  core-frontend:
    container_name: core-frontend
    image: leanda/core-frontend:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_EVENT_STORE=ConnectTo=tcp://admin:changeit@eventstore:1113
      - OSDR_REDIS=redis
      - OSDR_LOG_LEVEL=Error
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./Sds.Osdr.Domain.FrontEnd
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - eventstore
      - redis
      - mongo

  core-sagahost:
    container_name: core-sagahost
    image: leanda/core-sagahost:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_LOG_LEVEL=Error
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./Sds.Osdr.Domain.SagaHost
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - mongo

  core-persistence:
    container_name: core-persistence
    image: leanda/core-persistence:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_LOG_LEVEL=Error
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./Sds.Osdr.Persistence
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    depends_on:
      - rabbitmq
      - mongo

  core-web-api:
    container_name: core-web-api
    image: leanda/core-web-api:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - IDENTITY_SERVER_URL=http://keycloak:8080/auth/realms/OSDR
      - OSDR_REDIS=redis
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - OSDR_EVENT_STORE=ConnectTo=tcp://admin:changeit@eventstore:1113
      #- OSDR_ES=http://elasticsearch:9200
      - SWAGGER_BASEPATH=/osdr/v1
      - OSDR_LOG_LEVEL=Error
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh keycloak:8080 -t 30 -- ./Sds.Osdr.WebApi
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    ports:
      - "28611:18006"
    depends_on:
      - keycloak
      - rabbitmq
      - eventstore
      - redis
      - mongo

  blob-storage-api:
    container_name: blob-storage-api
    image: leanda/blob-storage-webapi:${TAG_VERSION-latest}
    entrypoint: /bin/bash
    environment:
      - IDENTITY_SERVER_URL=http://keycloak:8080/auth/realms/OSDR
      - OSDR_LOG_FOLDER=/logs
      - OSDR_MONGO_DB=mongodb://mongo:27017/osdr_dev
      - OSDR_RABBIT_MQ=rabbitmq://guest:guest@rabbitmq:5672/osdr_test
      - SWAGGER_BASEPATH=/blob/v1
    command: ./wait-for-it.sh rabbitmq:5672 -t 30 -- ./wait-for-it.sh keycloak:8080 -t 30 -- ./Sds.Storage.Blob.WebApi
    volumes:
      - ${OSDR_LOG_FOLDER}:/logs
    networks:
      - osdr-test
    ports:
      - "18006:18006"

networks:
  osdr-test:
