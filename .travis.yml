language: minimal

services:
  - docker

branches:
  only:
    - master

os:
  - linux

env:
  global:
    - DATE=`TZ=America/New_York date "+%Y-%m-%d-%H%M"`
    - DATE_TM=`TZ=America/New_York date "+%Y-%m-%d %H:%M"`
    - DOCKER_CACHE_FILE=/home/travis/docker/docker-cache.tar
    - DOCKER_CACHE_FOLDER=/home/travis/docker
    - LEANDA_PERSISTENCE_IMAGE="leanda/core-persistence"
    - LEANDA_FRONTEND_IMAGE="leanda/core-frontend"
    - LEANDA_BACKEND_IMAGE="leanda/core-backend"
    - LEANDA_SAGAHOST_IMAGE="leanda/core-sagahost"
    - LEANDA_WEBAPI_IMAGE="leanda/core-webapi"

# before_install:
#   - if [ -d ${DOCKER_CACHE_FOLDER} ]; then rm ${DOCKER_CACHE_FOLDER}*; fi
#   - ls ${DOCKER_CACHE_FOLDER}

cache:
  directories:
    - /home/travis/docker/

# script:
#   - docker build -t leanda/core-persistence:latest -f Sds.Osdr.Persistence/Dockerfile .
#   - docker build -t leanda/core-frontend:latest -f Sds.Osdr.Domain.FrontEnd/Dockerfile .
#   - docker build -t leanda/core-backend:latest -f Sds.Osdr.Domain.BackEnd/Dockerfile .
#   - docker build -t leanda/core-sagahost:latest -f Sds.Osdr.Domain.SagaHost/Dockerfile .
#   - docker build -t leanda/core-web-api:latest -f Sds.Osdr.WebApi/Dockerfile .
#   - docker build -t leanda/integration:latest -f Sds.Osdr.IntegrationTests/Dockerfile .
#   - docker build -t leanda/webapi-integration:latest -f Sds.Osdr.WebApi.IntegrationTests/Dockerfile .
#   - docker image ls

jobs:
  include:
    # - stage: Build docker images
    #   name: Build Leanda Back-End, Front-End, Sagahost, Persistence and Web API services
    #   script: 
    #     - docker build -t ${LEANDA_PERSISTENCE_IMAGE}:ci -f Sds.Osdr.Persistence/Dockerfile .
    #     - docker build -t ${LEANDA_FRONTEND_IMAGE}:ci -f Sds.Osdr.Domain.FrontEnd/Dockerfile .
    #     - docker build -t ${LEANDA_BACKEND_IMAGE}:ci -f Sds.Osdr.Domain.BackEnd/Dockerfile .
    #     - docker build -t ${LEANDA_SAGAHOST_IMAGE}:ci -f Sds.Osdr.Domain.SagaHost/Dockerfile .
    #     - docker build -t ${LEANDA_WEBAPI_IMAGE}:ci -f Sds.Osdr.Domain.SagaHost/Dockerfile .
    #     - if [ -d ${DOCKER_CACHE_FILE} ]; then rm ${DOCKER_CACHE_FILE}; fi
    #     - docker save -o ${DOCKER_CACHE_FILE} ${LEANDA_PERSISTENCE_IMAGE}:ci ${LEANDA_FRONTEND_IMAGE}:ci ${LEANDA_BACKEND_IMAGE}:ci ${LEANDA_SAGAHOST_IMAGE}:ci ${LEANDA_WEBAPI_IMAGE}:ci
    - stage: Run integration tests
      name: Run Web API integration tests
      script:
        - docker load -i ${DOCKER_CACHE_FILE}
        - docker build -t leanda/webapi-integration:ci -f Sds.Osdr.WebApi.IntegrationTests/Dockerfile .
        - docker images
        - echo 'Web API integration tests...'
    - script:
        - docker load -i ${DOCKER_CACHE_FILE}
        - docker build -t leanda/integration:ci -f Sds.Osdr.IntegrationTests/Dockerfile .
        - docker images
        - yes | cp -rf Sds.Osdr.IntegrationTests/.env.travis-ci Sds.Osdr.IntegrationTests/.env
        - cd Sds.Osdr.IntegrationTests && docker-compose up --abort-on-container-exit
      name: Run processing integration tests
    - stage: Deploy to docker hub
      script:
        - docker load -i ${DOCKER_CACHE_FILE}
        - docker tag ${LEANDA_PERSISTENCE_IMAGE}:ci ${LEANDA_PERSISTENCE_IMAGE}:latest
        - docker tag ${LEANDA_FRONTEND_IMAGE}:ci ${LEANDA_FRONTEND_IMAGE}:latest
        - docker tag ${LEANDA_BACKEND_IMAGE}:ci ${LEANDA_BACKEND_IMAGE}:latest
        - docker tag ${LEANDA_SAGAHOST_IMAGE}:ci ${LEANDA_SAGAHOST_IMAGE}:latest
        - docker tag ${LEANDA_WEBAPI_IMAGE}:ci ${LEANDA_WEBAPI_IMAGE}:latest
        - docker images

# jobs:
#   include:
#     - stage: build docker images
#       name: build Persistence service
#       script: docker build -t leanda/core-persistence:latest -f Sds.Osdr.Persistence/Dockerfile .
#     - script: docker build -t leanda/core-frontend:latest -f Sds.Osdr.Domain.FrontEnd/Dockerfile .
#       name: build Front End service
#     - script: docker build -t leanda/core-backend:latest -f Sds.Osdr.Domain.BackEnd/Dockerfile .
#       name: build Back End service
#     - stage: check docker images
#       script: docker images

# env:
#   global:
#     - DATE=`TZ=America/New_York date "+%Y-%m-%d-%H%M"`
#     - DATE_TM=`TZ=America/New_York date "+%Y-%m-%d %H:%M"`
#     - DOCKER_IMAGE="leanda/ui"

# before_script:
#   - echo "{\"buildInfo\":{\"buildId\":\""$TRAVIS_BUILD_NUMBER"\",\"buildDate\":\""$DATE_TM"\",\"environment\":\"DEV\"}}" > src/jenkinsBuildData.json

# script:
#   - docker build --build-arg APP_ENV=deploy -t $DOCKER_IMAGE:$DATE -t $DOCKER_IMAGE:latest .

# after_success:
#   - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
#   - docker push $DOCKER_IMAGE # Pushes both date and latest